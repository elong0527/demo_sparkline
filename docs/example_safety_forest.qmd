---
title: "Safety Forest Plot - Adverse Events Analysis"
format:
  html:
    code-fold: true
    code-tools: true
---

## Introduction

This example demonstrates creating a safety forest plot comparing adverse events between treatment and placebo, matching clinical trial reporting standards.

## Setup

```{python}
#| label: setup
#| message: false

import polars as pl
from reactable import embed_css
from forestly import ForestPlot, TextPanel, SparklinePanel, Config

# Enable reactable CSS
embed_css()
```

## Create Safety Data

```{python}
#| label: create-safety-data

# Create safety data with three treatment groups
safety_data = pl.DataFrame({
    # Adverse event terms
    "ae_term": [
        "Application site pruritus",
        "Pruritus", 
        "Application site erythema",
        "Rash",
        "Erythema",
        "Dizziness",
        "Application site irritation",
        "Sinus bradycardia",
        "Blister",
        "Application site dermatitis"
    ],
    
    # Placebo (N=86)
    "placebo_n": [6, 8, 3, 5, 9, 2, 3, 2, 0, 5],
    "placebo_pct": [7.0, 9.3, 3.5, 5.8, 10.5, 2.3, 3.5, 2.3, 0.0, 5.8],
    
    # Low dose treatment (N=84)
    "low_dose_n": [22, 23, 12, 13, 15, 8, 9, 7, 5, 9],
    "low_dose_pct": [26.2, 27.4, 14.3, 15.5, 17.9, 9.5, 10.7, 8.3, 6.0, 10.7],
    
    # High dose treatment (N=84)
    "high_dose_n": [22, 26, 15, 11, 14, 12, 9, 8, 1, 7],
    "high_dose_pct": [26.2, 31.0, 17.9, 13.1, 16.7, 14.3, 10.7, 9.5, 1.2, 8.3],
    
    # AE proportions for sparkline (all three groups)
    "ae_prop_placebo": [7.0, 9.3, 3.5, 5.8, 10.5, 2.3, 3.5, 2.3, 0.0, 5.8],
    "ae_prop_low": [26.2, 27.4, 14.3, 15.5, 17.9, 9.5, 10.7, 8.3, 6.0, 10.7],
    "ae_prop_high": [26.2, 31.0, 17.9, 13.1, 16.7, 14.3, 10.7, 9.5, 1.2, 8.3],
    
    # Risk difference vs placebo (Low dose)
    "risk_diff_low": [19.2, 18.1, 10.8, 9.7, 7.4, 7.2, 7.2, 6.0, 6.0, 4.9],
    "risk_diff_low_lower": [9.1, 7.7, 3.1, 1.5, -2.0, 0.5, -0.1, -0.1, 1.3, -2.7],
    "risk_diff_low_upper": [29.3, 28.5, 18.5, 17.9, 16.8, 13.9, 14.5, 12.1, 10.7, 12.5],
})

print(f"Safety data shape: {safety_data.shape}")
safety_data.head()
```

## Create Safety Forest Plot

```{python}
#| label: create-safety-forest

# Create safety forest plot with three treatment arms
safety_forest = ForestPlot(
    data=safety_data,
    panels=[
        # Adverse Events column
        TextPanel(
            variables="ae_term",
            title="Adverse Events",
            width=250
        ),
        
        # AE Proportion panel for low dose
        SparklinePanel(
            variables=["ae_prop_placebo", "ae_prop_low"],
            title="AE Proportion (%)",
            labels=["Placebo", "Low Dose"],
            xlim=(0, 40),
            width=300,
            reference_line=None
        ),
        
        # Risk Difference panel with confidence intervals (Low dose vs Placebo)
        SparklinePanel(
            variables="risk_diff_low",
            lower="risk_diff_low_lower",
            upper="risk_diff_low_upper",
            title="Risk Difference (%) + 95% CI\nvs. Placebo",
            reference_line=0,
            xlim=(-10, 30),
            width=350
        ),
        
        # Low dose counts and percentages
        TextPanel(
            variables=["low_dose_n", "low_dose_pct"],
            title="Low Dose\n(N=84)",
            labels=["n", "(%)"],
            width=100
        ),
        
        # Placebo counts and percentages
        TextPanel(
            variables=["placebo_n", "placebo_pct"],
            title="Placebo\n(N=86)",
            labels=["n", "(%)"],
            width=100
        )
    ],
    config=Config(
        title="Treatment-Emergent Adverse Events",
        footnote="Treatment <- Favor -> Placebo",
        colors=["#8B4513", "#4682B4", "#1976D2"],  # Brown for placebo, blue for low dose, darker blue for risk diff
        sparkline_height=35,
        formatters={
            "placebo_pct": lambda x: f"({x:.1f})",
            "low_dose_pct": lambda x: f"({x:.1f})",
            "high_dose_pct": lambda x: f"({x:.1f})",
        }
    )
)

print("Safety forest plot created successfully!")
```

## Display Interactive Safety Forest Plot

```{python}
#| label: display-safety-forest

# Generate and display the interactive Reactable
safety_forest.to_reactable()
```

## Key Findings

The safety forest plot reveals:

1. **Application Site Reactions**: Most common AEs are application-site related (pruritus, erythema, irritation)
2. **Risk Differences**: All AEs show higher incidence in treatment group vs placebo
3. **Statistical Significance**: Events where CI doesn't cross 0 indicate significant differences
4. **Safety Profile**: Largest risk differences seen in pruritus and application site reactions

## Export Options

```{python}
#| label: export-options
#| eval: false

# Export to different formats
safety_forest.to_rtf("safety_forest_plot.rtf")  # For regulatory submissions
safety_forest.to_dataframe()  # Get processed data